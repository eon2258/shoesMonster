<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sm.mapper.PersonMapper">
	
<!-- ===================================================== 사원 권한 ================================================================== -->
	
	<!-- 사원 목록 조회 -->
	<select id="empList" resultType="EmployeesVO"> 
		select * from employees
		order by emp_department ASC
		limit #{startPage}, #{pageSize}
	</select>	
	<!-- 사원 목록 조회 -->
	
	<!-- 사원 권한 정보 조회 -->
	<select id="management" resultType="ManagementVO">
		select * from management
	</select>
	<!-- 사원 권한 정보 조회 -->

	<!-- 사원 전체 수 -->
	<select id="employeesAllCnt" resultType="int">
		select count(*) from employees
	</select>
	<!-- 사원 전체 수 -->
	
	<!-- 사원 검색 -->
	<select id="searchEmployeesList" parameterType="hashMap" resultType="EmployeesVO">
		<bind name="emp_id" value="'%' + search_emp_id + '%'"/>
		<bind name="emp_name" value="'%' + search_emp_name + '%'"/>
		
		select * from employees
		<where>
			<if test="emp_id != null and !emp_id.isEmpty()">
				emp_id like #{emp_id}
			</if>
			<if test="emp_name != null and !emp_name.isEmpty()">
				and emp_name like #{emp_name}
			</if>
			<if test="search_emp_department != '전체' and !search_emp_department.isEmpty()">
				and emp_department=#{search_emp_department}
			</if>
		</where>
		order by emp_department ASC
		limit #{startPage}, #{pageSize}
	</select>
	<!-- 사원 검색 -->
	
	<!-- 사원 검색 개수 -->
	<select id="searchEmployeesCnt" parameterType="hashMap" resultType="int">
		<bind name="emp_id" value="'%' + search_emp_id + '%'"/>
		<bind name="emp_name" value="'%' + search_emp_name + '%'"/>
		
		select count(*) from employees 
		<where>
			<if test="emp_id != null and !emp_id.isEmpty()">
				emp_id like #{emp_id}
			</if>
			<if test="emp_name != null and !emp_name.isEmpty()">
				and emp_name like #{emp_name}
			</if>
			<if test="search_emp_department != '전체' and !search_emp_department.isEmpty()">
				and emp_department=#{search_emp_department}
			</if>
		</where>
	</select>
	<!-- 사원 검색 개수 -->
	
	<!-- 사원 추가 -->
	<insert id="insertEmployees">
		insert into employees (emp_id, emp_pw, emp_name, emp_department, emp_position, emp_email, emp_phone, emp_hiredate, emp_work)
		values (#{emp_id}, #{emp_pw}, #{emp_name}, #{emp_department}, #{emp_position}, #{emp_email}, #{emp_phone}, #{emp_hiredate}, #{emp_work})
	</insert>
	<!-- 사원 추가 -->
	
	<!-- 사원 삭제 -->
	<delete id="deleteEmployees">
		delete from employees 
		where emp_id=#{emp_id}
	</delete>
	<!-- 사원 삭제 -->
	
 	<!-- 사원 상세 조회 -->
	<select id="readEmployees" resultType="EmployeesVO">
		select * from employees
		where emp_id=#{emp_id}
		order by emp_department ASC
	</select>
 	<!-- 사원 조회 -->
	
	<!-- 사원 수정 -->
	<update id="updateEmployees">
		update employees
		set emp_id=#{emp_id}, emp_pw=#{emp_pw}, emp_name=#{emp_name}, emp_department=#{emp_department}, 
			emp_position=#{emp_position}, emp_email=#{emp_email}, emp_phone=#{emp_phone},
			emp_hiredate=#{emp_hiredate}, emp_work=#{emp_work}
		where emp_id=#{emp_id}
	</update>
	<!-- 사원 수정 -->
	
	
	
	
	
	
	
	
	
	
  <!-- ===================================================== 사원 권한 ================================================================== -->
  
  <!-- ===================================================== 거래처 ================================================================== -->

	<!-- 거래처 목록 불러오기 -->
	<select id="listAll" resultType="com.sm.domain.ClientsVO">
		select * from clients
		order by client_code ASC
		limit #{startPage}, #{pageSize}
	</select>
	<!-- 거래처 목록 불러오기 -->
	
	<!-- 거래처 전체 개수 -->
	<select id="clientALLcnt" resultType="int">
		select count(*) from clients
	</select>
	<!-- 거래처 전체 개수 -->
	
	<!-- 거래처 검색 -->
	<select id="searchClientsList" resultType="com.sm.domain.ClientsVO">
		<bind name="client_code" value="'%' + search_client_code + '%'"/>
		<bind name="client_actname" value="'%' + search_client_actname + '%'"/>
		
		select * from clients
		<where>
			<if test="client_code != null and !client_code.isEmpty()">
				client_code Like #{client_code}
			</if>
			<if test="client_actname != null and !client_actname.isEmpty()">
				AND client_actname Like #{client_actname}
			</if>
			<if test="search_client_type != '전체' and !search_client_type.isEmpty()">
				AND client_type=#{search_client_type}
			</if>
		</where>
		limit #{startPage}, #{pageSize}
	</select>
	<!-- 거래처 검색 -->
	
	<!-- 거래처 검색 개수 -->
	<select id="searchClientCnt" parameterType="hashMap" resultType="int">
		<bind name="client_code" value="'%' + search_client_code + '%'"/>
		<bind name="client_actname" value="'%' + search_client_actname + '%'"/>
	
		select count(*) from clients
		<where>
			<if test="client_code != null and !client_code.isEmpty()">
				client_code Like #{client_code}
			</if>
			<if test="client_actname != null and !client_actname.isEmpty()">
				AND client_actname Like #{client_actname}
			</if>
			<if test="search_client_type != null and search_client_type != '전체'">
				AND client_type=#{search_client_type}
			</if>
		</where>
	</select>
	<!-- 거래처 검색 개수 -->
	
	<!-- 거래처 추가 -->
	<insert id="insertClient">
		insert into clients (client_code, client_actname, client_type, client_number, client_sort, client_ceo, client_name, client_addr, 
							 client_addr2, client_tel, client_phone, client_fax, client_email, client_note)
		values (#{client_code}, #{client_actname}, #{client_type}, #{client_number}, #{client_sort}, #{client_ceo}, #{client_name}, #{client_addr}, 
			   #{client_addr2}, #{client_tel}, #{client_phone}, #{client_fax}, #{client_email}, #{client_note})
	</insert>
	<!-- 거래처 추가 -->
	
	<!-- 거래처 삭제 -->
	<delete id="deleteClient">
		delete from clients
		where client_code=#{client_code}
	</delete>
	<!-- 거래처 삭제 -->
	
	<!-- 거래처 수정 -->
	<update id="updateClient">
		update clients
		set client_code=#{client_code}, client_actname=#{client_actname}, client_type=#{client_type}, client_number=#{client_number}, client_sort=#{client_sort},
		    client_ceo=#{client_ceo}, client_name=#{client_name}, client_addr=#{client_addr}, client_addr2=#{client_addr2}, client_tel=#{client_tel},
		    client_phone=#{client_phone}, client_fax=#{client_fax}, client_email=#{client_email}, client_note=#{client_note}
		where client_code=#{client_code}
	</update>
	<!-- 거래처 수정 -->
	
<!-- ===================================================== 거래처 ================================================================== -->


<!-- ===================================================== 수주 현황 ================================================================== -->
	
	<!-- 수주 현황 목록 불러오기 -->
	<resultMap type="com.sm.domain.OrderStatusVO" id="orderStatusList">
			<result column="order_code" property="order_code" />
			<result column="order_date" property="order_date" />
			<result column="order_deliveryDate" property="order_deliveryDate" />
			<result column="emp_id" property="emp_id" />
			<result column="order_count" property="order_count" />
			<result column="client_code" property="client_code" />
<!-- 			<result column="order_finish" property="order_finish" /> -->
			<result column="order_note" property="order_note" />
	
		<collection property="prod" ofType="com.sm.domain.ProductVO">
			<result column="prod_code" property="prod_code" />
			<result column="prod_name" property="prod_name" />
			<result column="prod_unit" property="prod_unit" />
		</collection>
		
		<collection property="clients" ofType="com.sm.domain.ClientsVO">
			<result column="client_actname" property="client_actname" />
		</collection>
  </resultMap>
	
	<select id="orderStatusList" resultType="com.sm.domain.OrderStatusVO" resultMap="orderStatusList">
		select o.order_code, o.order_date, o.client_code, c.client_actname, o.emp_id, p.prod_code, p.prod_name, 
			   p.prod_unit, o.order_deliveryDate, o.order_count, o.order_note
		from orders o
		JOIN product p ON p.client_code = o.client_code
		JOIN clients c ON c.client_code = o.client_code
	</select>
	<!-- 수주 현황 목록 불러오기 -->
	
	<!-- 수주 현황 전체 개수 -->
	<select id="orderStatusALLcnt" resultType="int">
		select count(*) 
		from orders 
	</select>
	<!-- 수주 현황 전체 개수 -->
	
	<!-- 수주현황 검색 -->
    <resultMap type="com.sm.domain.OrderStatusVO" id="orderStatusList2">
			<result column="order_code" property="order_code" />
			<result column="order_date" property="order_date" />
			<result column="order_deliveryDate" property="order_deliveryDate" />
			<result column="emp_id" property="emp_id" />
			<result column="order_count" property="order_count" />
			<result column="client_code" property="client_code" />
<!-- 			<result column="order_finish" property="order_finish" /> -->
			<result column="order_note" property="order_note" />
	
		<collection property="prod" ofType="com.sm.domain.ProductVO">
			<result column="prod_code" property="prod_code" />
			<result column="prod_name" property="prod_name" />
			<result column="prod_unit" property="prod_unit" />
		</collection>
		
		<collection property="clients" ofType="com.sm.domain.ClientsVO">
			<result column="client_actname" property="client_actname" />
		</collection>
  </resultMap>

	
	<select id="searchOrderStatusList" resultType="com.sm.domain.OrderStatusVO" resultMap="orderStatusList2">
		select o.order_code, o.order_date, o.client_code, c.client_actname, o.emp_id, p.prod_code, p.prod_name, 
			   p.prod_unit, o.order_deliveryDate, o.order_count, o.order_note
		from orders o
		JOIN product p ON p.client_code = o.client_code
		JOIN clients c ON c.client_code = o.client_code
		<where>
			<if test="client_code != null and client_code != ''">
				o.client_code Like CONCAT ('%',#{client_code},'%')
			</if>
			<if test="client_actname != null and client_actname != ''">
				c.client_actname Like CONCAT ('%',#{client_actname},'%')
			</if>
			<if test="(order_date_fromDate!=null and !order_date_fromDate.equals('')) and (order_date_toDate!=null and !order_date_toDate.equals(''))">
				AND (order_date &gt;= #{order_date_fromDate} AND order_date &lt;= #{order_date_toDate}) 
			</if> 
			<if test="prod_code != null and prod_code != ''">
				AND p.prod_code Like CONCAT ('%',#{prod_code},'%')
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND o.emp_id Like CONCAT ('%',#{search_emp_id},'%')
			</if>
			<if test="(order_deliveryDate_fromDate!=null and !order_deliveryDate_fromDate.equals('')) and (order_deliveryDate_toDate!=null and !order_deliveryDate_toDate.equals(''))">
				AND (order_deliveryDate &gt;= #{order_deliveryDate_fromDate} AND order_deliveryDate &lt;= #{order_deliveryDate_toDate}) 
			</if> 
<!-- 			<if test="order_finish != '전체'"> -->
<!-- 				AND order_finish Like CONCAT ('%',#{order_finish},'%') -->
<!-- 			</if> -->
		</where>
		LIMIT #{startPage}, #{pageSize}
	</select>
	<!-- 수주현황 검색 -->
	
	<!-- 수주 현황 검색 개수 -->
	<select id="searchOrderStatusCnt" parameterType="hashMap" resultType="int">
		select count(*)
		from orders o
<!-- 		JOIN product p ON p.client_code = o.client_code -->
<!-- 		JOIN clients c ON c.client_code = o.client_code -->
		
		<where>
			<if test="client_actname != null and client_actname != ''">
				c.client_actname Like CONCAT ('%',#{client_actname},'%')
			</if>
			<if test="(order_date_fromDate!=null and !order_date_fromDate.equals('')) and (order_date_toDate!=null and !order_date_toDate.equals(''))">
				AND (order_date &gt;= #{order_date_fromDate} AND order_date &lt;= #{order_date_toDate}) 
			</if> 
			<if test="prod_code != null and prod_code != ''">
				AND p.prod_code Like CONCAT ('%',#{prod_code},'%')
			</if>
			<if test="emp_id != null and emp_id != ''">
				AND o.emp_id Like CONCAT ('%',#{emp_id},'%')
			</if>
			<if test="(order_deliveryDate_fromDate!=null and !order_deliveryDate_fromDate.equals('')) and (order_deliveryDate_toDate!=null and !order_deliveryDate_toDate.equals(''))">
				AND (order_deliveryDate &gt;= #{order_deliveryDate_fromDate} AND order_deliveryDate &lt;= #{order_deliveryDate_toDate}) 
			</if> 
<!-- 			<if test="order_finish != '전체'"> -->
<!-- 				AND order_finish Like CONCAT ('%',#{order_finish},'%') -->
<!-- 			</if> -->
		</where>
	</select>
	<!-- 수주 현황 검색 개수 -->
	
	<!-- 수주 등록 -->
	<insert id="registOrder">
		INSERT ALL
		INTO orders VALUES (#{order_code}, #{order_date}, #{order_deliveryDate}, #{emp_id}, #{order_count}, #{client_code})
		INTO clients VALUES (#{client_actname})
		SELECT (order_code, order_date, order_deliveryDate, emp_id, order_count, client_code, client_actname) 
	</insert>
	<!-- 수주 등록 -->
	
	<!-- 수주 삭제 -->
	<delete id="deleteOrder">
		delete from orders
		where order_code=#{order_code}
	</delete>
	<!-- 수주 삭제 -->
	
	<!-- 수주 수정 -->
	<update id="updateOrder">
		update clients
		set client_code=#{client_code}, client_actname=#{client_actname}, client_type=#{client_type}, client_number=#{client_number}, client_sort=#{client_sort},
		    client_ceo=#{client_ceo}, client_name=#{client_name}, client_addr=#{client_addr}, client_addr2=#{client_addr2}, client_tel=#{client_tel},
		    client_phone=#{client_phone}, client_fax=#{client_fax}, client_email=#{client_email}, client_note=#{client_note}
		where client_code=#{client_code}
	</update>
	<!-- 수주 수정 -->
<!-- ===================================================== 수주 현황 ================================================================== -->
	
	
<!-- ===================================================== 수주 관리 ================================================================== -->
	<!-- 수주 관리 조회 -->
	<resultMap type="com.sm.domain.ClientsVO" id="Client_order_ManageList">
		<result column="client_code" property="client_code"/>
		<result column="client_actname" property="client_actname"/>
		
		<collection property="orders" ofType="com.sm.domain.OrderStatusVO">
			<result column="order_date" property="order_date"/>
			<result column="order_deliveryDate" property="order_deliveryDate"/>
		</collection>
		<collection property="employees" ofType="com.sm.domain.EmployeesVO">
			<result column="emp_id" property="emp_id"/>
			<result column="emp_name" property="emp_name"/>
		</collection>
	</resultMap>
	
	<select id="orderManageList" resultMap="Client_order_ManageList">
		select c.client_code, c.client_actname, o.order_date, o.order_deliveryDate,
				e.emp_id, e.emp_name
		from clients c
		join orders o on o.client_code = c.client_code
        join employees e on e.emp_id = o.emp_id;
	</select>
	<!-- 수주 관리 조회 -->
<!-- ===================================================== 수주 관리 ================================================================== -->
	
	
	
</mapper>